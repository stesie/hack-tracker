#! /bin/bash
#
# Processor for series of local screenshots, writing hack tracker bulk injectable JSON
#
# @author Stefan Siegl
#
# Copyright (c) 2013 Stefan Siegl <stesie@brokenpipe.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

if [ "$1" = "--ap-extract" ]; then
	apExtract=$1
	shift
fi

hacker_name=$1; shift;
hacker_level=$1; shift;
reso_state=""
reso_filename=""
first=1
multihack_stamp=0

while filename="$1"; shift; do
	scraped=$("${0%/*}/shot-scraper" $apExtract "$filename") || scraped=""

	if [ "$scraped" = "" ]; then
		# data not understood, reset state
		reso_state=""
        reso_filename=""
	fi

	if echo "$scraped" | grep -qe "items"; then
		if [ "$reso_state" = "" ]; then continue; fi

        if [ "$reso_state" = "[ 0, 0, 0, 0, 0, 0, 0, 0]" ]; then
            scraped="`echo "$scraped" | sed -e "s/friendly/neutral/"`"
        fi

		datetime="`perl -e '$_ = shift @ARGV;
		if(m/Screenshot_(201\d-\d\d-\d\d)-(\d\d)-(\d\d)-(\d\d)\.png/) {
			print "$1 $2:$3:$4"
		} elsif(m/(201\d-\d\d-\d\d) (\d\d)\.(\d\d)\.(\d\d)\.png/) {
			print "$1 $2:$3:$4"
		}' -- \"${filename##*/}\" `"

		if [ "$datetime" = "" ]; then
			echo "unable to parse timestamp from filename: $filename" 1>&2
			continue
		fi

		stamp="`date +%s -d \"$datetime\"`"

		if [ "$first" -eq 1 ]; then
			echo "{ \"docs\": ["
			first=0
		else
			echo ","
		fi

		if [ $multihack_stamp -gt 0 ]; then
			if [ $[$stamp - $multihack_stamp] -lt 20 ]; then
				multihack=$[$multihack + 1]
			else
				multihack=0
			fi
		else
			multihack=0
		fi

		multihack_stamp=$stamp

		echo -n "{ \"_id\": \"$hacker_name-$stamp\", \"resos\": $reso_state, \"hacker\": { \"name\": \"$hacker_name\", \"level\": $hacker_level$ap_state }, \"hack\": $scraped, \"timestamp\": $stamp, \"derived-info\": { \"multihack\": $multihack }, \"source\": { \"hack\": \"${filename##*/}\", \"portal\": \"$reso_filename\" } }"

	elif echo "$scraped" | grep -qe "score"; then
		ap_state=", $scraped"

	else
		reso_state="$scraped"
        reso_filename="${filename##*/}"
		multihack_stamp=0
	fi
done

if [ "$first" -ne 1 ]; then
	echo ""
	echo "]}"
fi
