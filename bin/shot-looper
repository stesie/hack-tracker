#! /bin/bash
hacker_name=$1; shift;
hacker_level=$1; shift;
reso_state=""
first=1

while filename="$1"; shift; do
	scraped=$("${0%/*}/shot-scraper" "$filename") || scraped=""

	if [ "$scraped" = "" ]; then
		# data not understood, reset state
		reso_state=""
	fi

	if echo "$scraped" | grep -qe "items"; then
		if [ "$reso_state" = "" ]; then continue; fi

		if [ "$first" -eq 1 ]; then
			echo "{ \"docs\": ["
			first=0
		else
			echo ","
		fi

		datetime="`perl -e '$_ = shift @ARGV;
		if(m/Screenshot_(201\d-\d\d-\d\d)-(\d\d)-(\d\d)-(\d\d).\png/) {
			print "$1 $2:$3:$4"
		} elsif(m/(201\d-\d\d-\d\d) (\d\d)\.(\d\d)\.(\d\d)\.png/) {
			print "$1 $2:$3:$4"
		}' -- \"${filename##*/}\" `"

		if [ "$datetime" = "" ]; then
			echo "unable to parse timestamp from filename: $filename" 1>&2
			continue
		fi

		stamp="`date +%s -d \"$datetime\"`"
		echo -n "{ \"_id\": \"$hacker_name-$stamp\", \"resos\": $reso_state, \"hacker\": { \"name\": \"$hacker_name\", \"level\": $hacker_level }, \"hack\": $scraped, \"timestamp\": $stamp, \"source\": \"${filename##*/}\" }"
	else
		reso_state="$scraped"
	fi
done

if [ "$first" -ne 1 ]; then
	echo ""
	echo "]}"
fi
